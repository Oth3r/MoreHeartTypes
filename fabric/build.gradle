plugins {
    id 'base'
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'

    id "me.modmuss50.mod-publish-plugin" version "0.8.4"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = fabric_file
}

repositories {
    mavenLocal()
    maven {
        name = "DevAuth"
        url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
    }
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name "oth3rMavenSnapshots"
        url "https://maven.oth3r.one/snapshots"
    }
}

sourceSets {
    // Define a new sourceSet for the common code
    main {
        java {
            srcDir '../common/src/main/java'
        }
        resources {
            srcDir '../common/src/main/resources'
        }
    }
}

loom {
    accessWidenerPath = file("src/main/resources/more_heart_types.accesswidener")
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "one.oth3r:otterlib:${project.otterlib_version}-fabric"

    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modRuntimeOnly "me.djtheredstoner:DevAuth-fabric:${project.devauth_version}"
}

processResources {
    filteringCharset = "UTF-8"

    var replaceProperties = [
            version                : project.version,
            minecraft_version      : minecraft_version,
            min_minecraft_version  : min_minecraft_version,
            otterlib_version       : "${otterlib_version}-fabric",
            otterlib_max_version   : "${otterlib_max_version}-fabric",
            loader_version         : loader_version
    ]

    inputs.properties replaceProperties
    filesMatching("fabric.mod.json") {
        expand replaceProperties
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

publishMods {
    changelog = file('../changelog.md').text
    type = STABLE

    file = remapJar.archiveFile
    modLoaders.add("fabric")
    modLoaders.add("quilt")

    version = mod_version
    displayName = "v${mod_version} [Fabric]"

    curseforge {
        accessToken = env.fetchOrNull('CURSEFORGE')
        projectId = "1034723"
        projectSlug = "more-heart-types"
        minecraftVersions.addAll(minecraft_versions.split(",").toList())

        requires("fabric-api")

        announcementTitle = "Download from CurseForge"
    }

    modrinth {
        accessToken = env.fetchOrNull('MODRINTH')
        projectId = "HJ465X71"
        minecraftVersions.addAll(minecraft_versions.split(",").toList())

        requires("fabric-api")

        announcementTitle = "Download from Modrinth"
    }
}